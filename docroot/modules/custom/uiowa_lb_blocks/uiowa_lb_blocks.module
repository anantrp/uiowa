<?php

use Drupal\block\Entity\Block;
use Drupal\layout_builder\LayoutEntityHelperTrait;

/**
 * @file
 * Contains uiowa_lb_blocks.module.
 */

/**
 * Implements hook_form_alter().
 */
function uiowa_lb_blocks_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'layout_builder_add_block') {
    $form['layout_builder_block_override'] = [
      '#type' => 'checkbox',
      '#title' => t("Override Block Styles"),
      '#required' => FALSE,
    ];
    $form['layout_builder_style_margin']['#states'] = [
      'visible' => [
        ':input[name="layout_builder_block_override"]' => [
          'checked' => TRUE,
        ],
      ],
    ];
    $form['layout_builder_style_heading']['#states'] = [
      'visible' => [
        ':input[name="layout_builder_block_override"]' => [
          'checked' => TRUE,
        ],
      ],
    ];
    $form['layout_builder_style']['#states'] = [
      'visible' => [
        ':input[name="layout_builder_block_override"]' => [
          'checked' => TRUE,
        ],
      ],
    ];
  }
  if ($form_id == 'layout_builder_update_block') {
    $form['layout_builder_block_override'] = [
      '#type' => 'checkbox',
      '#title' => t("Override Block Styles"),
      '#required' => FALSE,
    ];
    $form['layout_builder_style_margin']['#states'] = [
      'visible' => [
        ':input[name="layout_builder_block_override"]' => [
          'checked' => TRUE,
        ],
      ],
    ];
    $form['layout_builder_style_heading']['#states'] = [
      'visible' => [
        ':input[name="layout_builder_block_override"]' => [
          'checked' => TRUE,
        ],
      ],
    ];
    $form['layout_builder_style']['#states'] = [
      'visible' => [
        ':input[name="layout_builder_block_override"]' => [
          'checked' => TRUE,
        ],
      ],
    ];
  }
}

/**
 * Implements hook_preprocess_html().
 */

function uiowa_lb_blocks_preprocess_html(&$variables) {
  $default_theme = \Drupal::config('system.theme')->get('default');
  $block_title_name = $default_theme . "_page_title";
  $block_title = Block::load($block_title_name);

  $check = \Drupal\layout_builder\LayoutEntityHelperTrait::getSectionStorageForEntity($entity);

  if ($check instanceof \Drupal\layout_builder\DefaultsSectionStorageInterface) {
    if (isset($block_title)) {
      $visibility = $block_title->getVisibility();
      $contentTypes = \Drupal::entityTypeManager()->getStorage('node_type')->loadMultiple();
      foreach ($contentTypes as $contentType) {
        $label = $contentType->id();
        $visibility['entity_bundle:node']['bundles'][$label] = $label;
      }

      $visibility['entity_bundle:node']['negate'] = 1;
      $block_title->setVisibilityConfig('entity_bundle:node', $visibility['entity_bundle:node']);
      $block_title->save();
    }
    $block_breadcrumb_name = $default_theme . "_breadcrumbs";
    $block_breadcrumbs = Block::load($block_breadcrumb_name);
    if (isset($block_breadcrumbs)) {
      $visibility = $block_breadcrumbs->getVisibility();
      $contentTypes = \Drupal::entityTypeManager()->getStorage('node_type')->loadMultiple();
      foreach ($contentTypes as $contentType) {
        $visibility['entity_bundle:node']['bundles'][$contentType->label()] = [];
        $visibility['entity_bundle:node']['bundles'][$contentType->label()] = $contentType->label();
      }
      $visibility['entity_bundle:node']['negate'] = true;
      $block_breadcrumbs->setVisibilityConfig('entity_bundle:node', $visibility['entity_bundle:node']);
      $block_breadcrumbs->save();
    }
  }
}
