aside,
.layout-content,
.region {
  padding: 0.625em;
}

aside .region,
.layout-content .region {
  padding: 0;
  border: none;
}

.layout-container {
  max-width: 78.750em;
  margin: 0 auto;
}

/**
 * SUSY/FLEXBOX STYLES
 *
 * The susy/flexbox styles are a fallback for older browsers that do not support
 * CSS grid. The CSS grid styles are below.
 *
 */
main {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.layout-content {
  -webkit-box-flex: 100%;
  -ms-flex: 100%;
  flex: 100%;
}

@media only screen and (min-width: 768px) and (max-width: 1023px) {
  .layout-page-sidebars-both .layout-content {
    -webkit-box-flex: 66.66667%;
    -ms-flex: 66.66667%;
    flex: 66.66667%;
    -webkit-box-ordinal-group: 3;
    -ms-flex-order: 2;
    order: 2;
  }
}

@media only screen and (min-width: 1024px) {
  .layout-page-sidebars-both .layout-content {
    -webkit-box-flex: 66.66667%;
    -ms-flex: 66.66667%;
    flex: 66.66667%;
    -webkit-box-ordinal-group: 3;
    -ms-flex-order: 2;
    order: 2;
  }
}

@media only screen and (min-width: 768px) and (max-width: 1023px) {
  .layout-page-sidebars-first .layout-content {
    -webkit-box-flex: 66.66667%;
    -ms-flex: 66.66667%;
    flex: 66.66667%;
    -webkit-box-ordinal-group: 3;
    -ms-flex-order: 2;
    order: 2;
  }
}

@media only screen and (min-width: 1024px) {
  .layout-page-sidebars-first .layout-content {
    -webkit-box-flex: 83.33333%;
    -ms-flex: 83.33333%;
    flex: 83.33333%;
    -webkit-box-ordinal-group: 3;
    -ms-flex-order: 2;
    order: 2;
  }
}

@media only screen and (min-width: 768px) and (max-width: 1023px) {
  .layout-page-sidebars-second .layout-content {
    -webkit-box-flex: 66.66667%;
    -ms-flex: 66.66667%;
    flex: 66.66667%;
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }
}

@media only screen and (min-width: 1024px) {
  .layout-page-sidebars-second .layout-content {
    -webkit-box-flex: 83.33333%;
    -ms-flex: 83.33333%;
    flex: 83.33333%;
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }
}

aside {
  -webkit-box-flex: 100%;
  -ms-flex: 100%;
  flex: 100%;
}

aside.layout-sidebar-first {
  -webkit-box-ordinal-group: 1;
  -ms-flex-order: 0;
  order: 0;
}

@media only screen and (min-width: 768px) and (max-width: 1023px) {
  .layout-page-sidebars-both aside.layout-sidebar-first {
    -webkit-box-flex: 33.33333%;
    -ms-flex: 33.33333%;
    flex: 33.33333%;
  }
}

@media only screen and (min-width: 1024px) {
  .layout-page-sidebars-both aside.layout-sidebar-first {
    -webkit-box-flex: 16.66667%;
    -ms-flex: 16.66667%;
    flex: 16.66667%;
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }
}

@media only screen and (min-width: 768px) and (max-width: 1023px) {
  .layout-page-sidebars-first aside.layout-sidebar-first {
    -webkit-box-flex: 33.33333%;
    -ms-flex: 33.33333%;
    flex: 33.33333%;
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }
}

@media only screen and (min-width: 1024px) {
  .layout-page-sidebars-first aside.layout-sidebar-first {
    -webkit-box-flex: 16.66667%;
    -ms-flex: 16.66667%;
    flex: 16.66667%;
    -webkit-box-ordinal-group: 2;
    -ms-flex-order: 1;
    order: 1;
  }
}

aside.layout-sidebar-second {
  -webkit-box-ordinal-group: 3;
  -ms-flex-order: 2;
  order: 2;
}

@media only screen and (min-width: 768px) and (max-width: 1023px) {
  .layout-page-sidebars-both aside.layout-sidebar-second {
    -webkit-box-flex: 100%;
    -ms-flex: 100%;
    flex: 100%;
    -webkit-box-ordinal-group: 4;
    -ms-flex-order: 3;
    order: 3;
  }
}

@media only screen and (min-width: 1024px) {
  .layout-page-sidebars-both aside.layout-sidebar-second {
    -webkit-box-flex: 16.66667%;
    -ms-flex: 16.66667%;
    flex: 16.66667%;
    -webkit-box-ordinal-group: 4;
    -ms-flex-order: 3;
    order: 3;
  }
}

@media only screen and (min-width: 768px) and (max-width: 1023px) {
  .layout-page-sidebars-second aside.layout-sidebar-second {
    -webkit-box-flex: 33.33333%;
    -ms-flex: 33.33333%;
    flex: 33.33333%;
  }
}

@media only screen and (min-width: 1024px) {
  .layout-page-sidebars-second aside.layout-sidebar-second {
    -webkit-box-flex: 16.66667%;
    -ms-flex: 16.66667%;
    flex: 16.66667%;
    -webkit-box-ordinal-group: 3;
    -ms-flex-order: 2;
    order: 2;
  }
}

.region-footer {
  width: 100%;
}

/**
 * CSS GRID STYLES
 *
 * Some versions of Edge and IE support an outdated version of CSS Grid
 * specification that does not include the grid-template property so we
 * check against it to force them to fallback on flexbox.
 *
 */
@supports (grid-template: none) {
  main {
    display: grid;
    grid-template-columns: 1fr repeat(4, 1fr) 1fr;
  }
  .layout-content,
  aside.layout-sidebar-first,
  aside.layout-sidebar-second,
  .region-foooter {
    width: auto;
    float: none;
    margin-right: 0;
    margin-left: 0;
  }
  .layout-content {
    grid-column: 1/7;
  }
  @media only screen and (min-width: 768px) and (max-width: 1023px) {
    .layout-page-sidebars-both .layout-content {
      grid-column: 3/7;
      -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
      order: 1;
    }
  }
  @media only screen and (min-width: 1024px) {
    .layout-page-sidebars-both .layout-content {
      grid-column: 2/6;
      -webkit-box-ordinal-group: 3;
      -ms-flex-order: 2;
      order: 2;
    }
  }
  @media only screen and (min-width: 768px) and (max-width: 1023px) {
    .layout-page-sidebars-first .layout-content {
      grid-column: 3/7;
      -webkit-box-ordinal-group: 3;
      -ms-flex-order: 2;
      order: 2;
    }
  }
  @media only screen and (min-width: 1024px) {
    .layout-page-sidebars-first .layout-content {
      grid-column: 2/7;
      -webkit-box-ordinal-group: 3;
      -ms-flex-order: 2;
      order: 2;
    }
  }
  @media only screen and (min-width: 768px) and (max-width: 1023px) {
    .layout-page-sidebars-second .layout-content {
      grid-column: 1/5;
      -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
      order: 1;
    }
  }
  @media only screen and (min-width: 1024px) {
    .layout-page-sidebars-second .layout-content {
      grid-column: 1/6;
      -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
      order: 1;
    }
  }
  aside.layout-sidebar-first {
    grid-column: 1/7;
  }
  @media only screen and (min-width: 768px) and (max-width: 1023px) {
    .layout-page-sidebars-both aside.layout-sidebar-first {
      grid-column: 1/3;
    }
  }
  @media only screen and (min-width: 1024px) {
    .layout-page-sidebars-both aside.layout-sidebar-first {
      grid-column: 1/2;
      -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
      order: 1;
    }
  }
  @media only screen and (min-width: 768px) and (max-width: 1023px) {
    .layout-page-sidebars-first aside.layout-sidebar-first {
      grid-column: 1/3;
      -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
      order: 1;
    }
  }
  @media only screen and (min-width: 1024px) {
    .layout-page-sidebars-first aside.layout-sidebar-first {
      grid-column: 1/2;
      -webkit-box-ordinal-group: 2;
      -ms-flex-order: 1;
      order: 1;
    }
  }
  aside.layout-sidebar-second {
    grid-column: 1/7;
  }
  @media only screen and (min-width: 768px) and (max-width: 1023px) {
    .layout-page-sidebars-both aside.layout-sidebar-second {
      grid-column: 1/7;
    }
  }
  @media only screen and (min-width: 1024px) {
    .layout-page-sidebars-both aside.layout-sidebar-second {
      grid-column: 6/7;
      -webkit-box-ordinal-group: 4;
      -ms-flex-order: 3;
      order: 3;
    }
  }
  @media only screen and (min-width: 768px) and (max-width: 1023px) {
    .layout-page-sidebars-second aside.layout-sidebar-second {
      grid-column: 5/7;
      -webkit-box-ordinal-group: 3;
      -ms-flex-order: 2;
      order: 2;
    }
  }
  @media only screen and (min-width: 1024px) {
    .layout-page-sidebars-second aside.layout-sidebar-second {
      grid-column: 6/7;
      -webkit-box-ordinal-group: 3;
      -ms-flex-order: 2;
      order: 2;
    }
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
