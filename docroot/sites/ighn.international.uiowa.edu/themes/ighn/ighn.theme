<?php

/**
 * @file
 * HR theme.
 */

use Drupal\node\NodeInterface;

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function ighn_theme_suggestions_block_alter(&$suggestions, $variables) {
  // Load theme suggestions for blocks from parent theme.
  // @see https://www.drupal.org/node/2165673
  foreach ($suggestions as &$suggestion) {
    $suggestion = str_replace('ighn_', 'classy_', $suggestion);
  }
}

/**
 * Implements hook_theme_suggestions_taxonomy_term_alter().
 */
function ighn_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
    $term = $variables['elements']['#taxonomy_term'];
    $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
    // Add view mode theme suggestions.
    $suggestions[] = 'taxonomy_term__' . $sanitized_view_mode;
    $suggestions[] = 'taxonomy_term__' . $term->bundle() . '__' . $sanitized_view_mode;
    $suggestions[] = 'taxonomy_term__' . $term->id() . '__' . $sanitized_view_mode;
  }

/**
 * Implements hook_preprocess_HOOK().
 */
function ighn_preprocess_menu_local_task(&$variables) {
    $variables['element']['#link']['url']->setOption('attributes', ['class' => ['nav-link']]);
  
    // If there is not an existing class array, create an empty array.
    if (!isset($variables['attributes']['class'])) {
      $variables['attributes']['class'] = [];
    }
    // Merge with any classes that may have been set by other hook_preprocess_menu invocations.
    $variables['attributes']['class'] = array_merge($variables['attributes']['class'], ['nav-item']);
  }

/**
 * Implements hook_preprocess_HOOK().
 */
function ighn_preprocess_block(&$variables) {
    $theme = \Drupal::service('theme.manager')->getActiveTheme();
    $node = \Drupal::routeMatch()->getParameter('node') ?? NULL;
  
    switch ($variables['elements']['#id']) {
      case $theme->getName() . '_breadcrumbs':
        // Visually hide breadcrumb block if publishing option is set to hidden.
        if ($node instanceof NodeInterface) {
          if ($node->hasField('field_publish_options') && !$node->get('field_publish_options')->isEmpty()) {
            $publish_options = $node->get('field_publish_options')->getValue();
            if (array_search('title_hidden', array_column($publish_options, 'value')) !== FALSE) {
              $variables['attributes']['class'][] = 'sr-only';
            }
          }
        }
        break;
    }
  }