/*
.remove-gutter {
    margin-left: -($grid-gutter-width / 2);
    margin-right: -($grid-gutter-width / 2);
  }
  */



//=======================================================
// Mixins
//=======================================================

// Clearfix
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// Helper function for working with Sass maps.
// Example: @include print($configuration);
@mixin print($declarations) {

  @each $property,
  $value in $declarations {
    #{$property}: $value;
  }
}

// Vertical align mixin.
@mixin vertical-align($position: relative) {
  display: block;
  position: $position;
  top: 50%;
  transform: translateY(-50%);
}

// Horizontal align mixin.
@mixin horizontal-align($position: relative) {
  display: inline-block;
  left: 50%;
  position: $position;
  transform: translateX(-50%);
}

// Center align mixin.
@mixin center-align($position: relative) {
  display: block;
  left: 50%;
  position: $position;
  top: 50%;
  transform: translate(-50%, -50%);
}

// Mixin for wireframe style large heading.
@mixin wire-large-heading {
  font-size: 1.5rem;
  font-weight: normal;

  @include breakpoint($bp-xsm) {
    font-size: 2rem;
  }

  @include breakpoint($bp-sm) {
    font-size: 3rem;
  }
}

// Font Smoothing.
// --------------------------------------------------
.font-smoothing-on {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.font-smoothing-off {
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

// Mixins ///////////////
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin opac-color($r, $g, $b, $pertc) {
  background: rgb($r, $g, $b);
  background: rgba($r, $g, $b, $pertc);
}

@mixin region-spacer($color, $direction: bottom) {
  border-top: 1px dotted $color;

  @if $direction==top {
    padding-top: 25px;
    margin-top: 25px;
  }

  @else {
    padding-bottom: 25px;
    margin-bottom: 25px;
  }
}

@mixin borderradius($px: 5px) {
  border-radius: $px;
  // background-clip: padding-box;
}

// Extends ///////////////
%no-ul-list {
  list-style-type: none;
  padding: 0;
  margin: 0;

  >li {
    display: inline-block;
    list-style-type: none;
    margin: 2px;
  }
}

%shadow {
  box-shadow: 0 0 2px 0 rgba($med-gray, 1);
}

%shadow-none {
  box-shadow: none;
}

%blocked-style {
  border: 1px solid $white;
  padding: 12px;
  border-radius: 5px;
  background: $off-white;

  @extend %shadow;
}
